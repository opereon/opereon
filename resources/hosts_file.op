aspect hosts {
    event MyEvent: ErrorEvent {
        timestamp: Datetime,
    }

    # Update /etc/hosts file
    fn hosts_file($hosts = $$hosts) {
        for $h in $hosts {
            $h.exec(|$e| {
                try {
                    $f = $e.file_copy($from = "./etc/hosts.ot", $to = "/etc/hosts", $process = true, $scope = {
                        host: $h,
                        hosts: $hosts,
                    })

                    $res = $e.command("cat /root/hosts > /etc/hosts")

                    if $f.content == $res.out {
                        print "ok"
                    } else {
                        throw Error();
                    }

                    $e.script("""

                    """)
                } catch ($err) {
                    raise MyEvent($err)
                }
            })
        }
    }


    check hosts_file($hosts: Host[]) {

    }

    @[cache_interval: '1m']
    query architecture($host: Host) {

    }

    @[interval: '1m']
    poll MyEvent($hosts: Host[]) {

    }

    on MyEvent($event: Event) {

    }
}


class Executor;
class Host;
class Event;
class Error;


